{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _getPrototypeOf = _interopRequireDefault(require(\"@babel/runtime/core-js/object/get-prototype-of\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactEventListener = _interopRequireDefault(require(\"react-event-listener\"));\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactPopper = require(\"react-popper\");\n\nvar _helpers = require(\"../utils/helpers\");\n\nvar _RootRef = _interopRequireDefault(require(\"../internal/RootRef\"));\n\nvar _Portal = _interopRequireDefault(require(\"../Portal\"));\n\nvar _common = _interopRequireDefault(require(\"../colors/common\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n/* eslint-disable react/no-multi-comp, no-underscore-dangle */\n\n\nvar styles = function styles(theme) {\n  return {\n    // Will be gone once we drop React 15.x support.\n    root: {\n      display: 'inline-block',\n      flexDirection: 'inherit' // Makes the wrapper more transparent.\n\n    },\n    popper: {\n      zIndex: theme.zIndex.tooltip,\n      pointerEvents: 'none',\n      '&$open': {\n        pointerEvents: 'auto'\n      }\n    },\n    open: {},\n    tooltip: {\n      backgroundColor: theme.palette.grey[700],\n      borderRadius: 2,\n      color: _common.default.white,\n      fontFamily: theme.typography.fontFamily,\n      opacity: 0,\n      transform: 'scale(0)',\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shortest,\n        easing: theme.transitions.easing.easeIn\n      }),\n      minHeight: 0,\n      padding: \"\".concat(theme.spacing.unit / 2, \"px \").concat(theme.spacing.unit, \"px\"),\n      fontSize: theme.typography.pxToRem(10),\n      lineHeight: \"\".concat(theme.typography.round(14 / 10), \"em\"),\n      '&$open': {\n        opacity: 0.9,\n        transform: 'scale(1)',\n        transition: theme.transitions.create(['opacity', 'transform'], {\n          duration: theme.transitions.duration.shortest,\n          easing: theme.transitions.easing.easeOut\n        })\n      }\n    },\n    touch: {\n      padding: \"\".concat(theme.spacing.unit, \"px \").concat(theme.spacing.unit * 2, \"px\"),\n      fontSize: theme.typography.pxToRem(14),\n      lineHeight: \"\".concat(theme.typography.round(16 / 14), \"em\")\n    },\n    tooltipPlacementLeft: (0, _defineProperty2.default)({\n      transformOrigin: 'right center',\n      margin: \"0 \".concat(theme.spacing.unit * 3, \"px\")\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n    tooltipPlacementRight: (0, _defineProperty2.default)({\n      transformOrigin: 'left center',\n      margin: \"0 \".concat(theme.spacing.unit * 3, \"px\")\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n    tooltipPlacementTop: (0, _defineProperty2.default)({\n      transformOrigin: 'center bottom',\n      margin: \"\".concat(theme.spacing.unit * 3, \"px 0\")\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    }),\n    tooltipPlacementBottom: (0, _defineProperty2.default)({\n      transformOrigin: 'center top',\n      margin: \"\".concat(theme.spacing.unit * 3, \"px 0\")\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    })\n  };\n};\n\nexports.styles = styles;\n\nfunction flipPlacement(placement) {\n  switch (placement) {\n    case 'bottom-end':\n      return 'bottom-start';\n\n    case 'bottom-start':\n      return 'bottom-end';\n\n    case 'top-end':\n      return 'top-start';\n\n    case 'top-start':\n      return 'top-end';\n\n    default:\n      return placement;\n  }\n}\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(Tooltip, _React$Component);\n\n  function Tooltip(props, context) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Tooltip);\n    _this = (0, _possibleConstructorReturn2.default)(this, (Tooltip.__proto__ || (0, _getPrototypeOf.default)(Tooltip)).call(this, props, context));\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"state\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"enterTimer\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"leaveTimer\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"touchTimer\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"closeTimer\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"isControlled\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"popper\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"children\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"ignoreNonTouchEvents\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleResize\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: (0, _debounce.default)(function () {\n        if (_this.popper) {\n          _this.popper._popper.scheduleUpdate();\n        }\n      }, 166)\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleEnter\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event) {\n        var _this$props = _this.props,\n            children = _this$props.children,\n            enterDelay = _this$props.enterDelay;\n        var childrenProps = children.props;\n\n        if (event.type === 'focus' && childrenProps.onFocus) {\n          childrenProps.onFocus(event);\n        }\n\n        if (event.type === 'mouseover' && childrenProps.onMouseOver) {\n          childrenProps.onMouseOver(event);\n        }\n\n        if (_this.ignoreNonTouchEvents && event.type !== 'touchstart') {\n          return;\n        }\n\n        clearTimeout(_this.enterTimer);\n        clearTimeout(_this.leaveTimer);\n\n        if (enterDelay) {\n          event.persist();\n          _this.enterTimer = setTimeout(function () {\n            _this.handleOpen(event);\n          }, enterDelay);\n        } else {\n          _this.handleOpen(event);\n        }\n      }\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleOpen\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event) {\n        if (!_this.isControlled) {\n          _this.setState({\n            open: true\n          });\n        }\n\n        if (_this.props.onOpen) {\n          _this.props.onOpen(event, true);\n        }\n      }\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleLeave\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event) {\n        var _this$props2 = _this.props,\n            children = _this$props2.children,\n            leaveDelay = _this$props2.leaveDelay;\n        var childrenProps = children.props;\n\n        if (event.type === 'blur' && childrenProps.onBlur) {\n          childrenProps.onBlur(event);\n        }\n\n        if (event.type === 'mouseleave' && childrenProps.onMouseLeave) {\n          childrenProps.onMouseLeave(event);\n        }\n\n        clearTimeout(_this.enterTimer);\n        clearTimeout(_this.leaveTimer);\n\n        if (leaveDelay) {\n          event.persist();\n          _this.leaveTimer = setTimeout(function () {\n            _this.handleClose(event);\n          }, leaveDelay);\n        } else {\n          _this.handleClose(event);\n        }\n      }\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleClose\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event) {\n        if (!_this.isControlled) {\n          _this.setState({\n            open: false\n          });\n        }\n\n        if (_this.props.onClose) {\n          _this.props.onClose(event, false);\n        }\n\n        clearTimeout(_this.closeTimer);\n        _this.closeTimer = setTimeout(function () {\n          _this.ignoreNonTouchEvents = false;\n        }, _this.props.theme.transitions.duration.shortest);\n      }\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleTouchStart\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event) {\n        _this.ignoreNonTouchEvents = true;\n        var _this$props3 = _this.props,\n            children = _this$props3.children,\n            enterTouchDelay = _this$props3.enterTouchDelay;\n        var childrenProps = children.props;\n\n        if (childrenProps.onTouchStart) {\n          childrenProps.onTouchStart(event);\n        }\n\n        clearTimeout(_this.leaveTimer);\n        clearTimeout(_this.closeTimer);\n        clearTimeout(_this.touchTimer);\n        event.persist();\n        _this.touchTimer = setTimeout(function () {\n          _this.handleEnter(event);\n        }, enterTouchDelay);\n      }\n    });\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleTouchEnd\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event) {\n        var _this$props4 = _this.props,\n            children = _this$props4.children,\n            leaveTouchDelay = _this$props4.leaveTouchDelay;\n        var childrenProps = children.props;\n\n        if (childrenProps.onTouchEnd) {\n          childrenProps.onTouchEnd(event);\n        }\n\n        clearTimeout(_this.touchTimer);\n        clearTimeout(_this.leaveTimer);\n        event.persist();\n        _this.leaveTimer = setTimeout(function () {\n          _this.handleClose(event);\n        }, leaveTouchDelay);\n      }\n    });\n    _this.isControlled = props.open != null;\n\n    if (!_this.isControlled) {\n      // not controlled, use internal state\n      _this.state.open = false;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(!this.children || !this.children.disabled || !this.children.tagName.toLowerCase() === 'button', ['Material-UI: you are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Place a `div` container on top of the element.'].join('\\n')) : void 0;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.enterTimer);\n      clearTimeout(this.leaveTimer);\n      clearTimeout(this.touchTimer);\n      clearTimeout(this.closeTimer);\n      this.handleResize.cancel();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          classes = _props.classes,\n          className = _props.className,\n          disableFocusListener = _props.disableFocusListener,\n          disableHoverListener = _props.disableHoverListener,\n          disableTouchListener = _props.disableTouchListener,\n          enterDelay = _props.enterDelay,\n          enterTouchDelay = _props.enterTouchDelay,\n          id = _props.id,\n          leaveDelay = _props.leaveDelay,\n          leaveTouchDelay = _props.leaveTouchDelay,\n          onClose = _props.onClose,\n          onOpen = _props.onOpen,\n          openProp = _props.open,\n          placementProp = _props.placement,\n          _props$PopperProps = _props.PopperProps;\n      _props$PopperProps = _props$PopperProps === void 0 ? {} : _props$PopperProps;\n      var PopperClassName = _props$PopperProps.className,\n          PopperProps = (0, _objectWithoutProperties2.default)(_props$PopperProps, [\"className\"]),\n          theme = _props.theme,\n          title = _props.title,\n          other = (0, _objectWithoutProperties2.default)(_props, [\"children\", \"classes\", \"className\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterTouchDelay\", \"id\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperProps\", \"theme\", \"title\"]);\n      var placement = theme.direction === 'rtl' ? flipPlacement(placementProp) : placementProp;\n      var open = this.isControlled ? openProp : this.state.open;\n      var childrenProps = {\n        'aria-describedby': id\n      }; // There is no point at displaying an empty tooltip.\n\n      if (title === '') {\n        open = false;\n      }\n\n      if (!disableTouchListener) {\n        childrenProps.onTouchStart = this.handleTouchStart;\n        childrenProps.onTouchEnd = this.handleTouchEnd;\n      }\n\n      if (!disableHoverListener) {\n        childrenProps.onMouseOver = this.handleEnter;\n        childrenProps.onMouseLeave = this.handleLeave;\n      }\n\n      if (!disableFocusListener) {\n        childrenProps.onFocus = this.handleEnter;\n        childrenProps.onBlur = this.handleLeave;\n      }\n\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(!children.props.title, ['Material-UI: you have been providing a `title` property to the child of <Tooltip />.', \"Remove this title property `\".concat(children.props.title, \"` or the Tooltip component.\")].join('\\n')) : void 0;\n      return _react.default.createElement(_reactPopper.Manager, (0, _extends2.default)({\n        tag: _reactDom.default.createPortal ? false : 'div',\n        className: (0, _classnames.default)(classes.root, className)\n      }, other), _react.default.createElement(_reactEventListener.default, {\n        target: \"window\",\n        onResize: this.handleResize\n      }), _react.default.createElement(_reactPopper.Target, null, function (_ref) {\n        var targetProps = _ref.targetProps;\n        return _react.default.createElement(_RootRef.default, {\n          rootRef: function rootRef(node) {\n            _this2.children = node;\n            targetProps.ref(_this2.children);\n          }\n        }, _react.default.cloneElement(children, childrenProps));\n      }), _react.default.createElement(_Portal.default, null, _react.default.createElement(_reactPopper.Popper, (0, _extends2.default)({\n        placement: placement,\n        eventsEnabled: open,\n        className: (0, _classnames.default)(classes.popper, (0, _defineProperty2.default)({}, classes.open, open), PopperClassName),\n        ref: function ref(node) {\n          _this2.popper = node;\n        }\n      }, PopperProps), function (_ref2) {\n        var popperProps = _ref2.popperProps,\n            restProps = _ref2.restProps;\n        var actualPlacement = (popperProps['data-placement'] || placement).split('-')[0];\n        return _react.default.createElement(\"div\", (0, _extends2.default)({}, popperProps, restProps, {\n          style: (0, _objectSpread2.default)({}, popperProps.style, {\n            top: popperProps.style.top || 0,\n            left: popperProps.style.left || 0\n          }, restProps.style)\n        }), _react.default.createElement(\"div\", {\n          id: id,\n          role: \"tooltip\",\n          \"aria-hidden\": !open,\n          className: (0, _classnames.default)(classes.tooltip, (0, _defineProperty2.default)({}, classes.open, open), (0, _defineProperty2.default)({}, classes.touch, _this2.ignoreNonTouchEvents), classes[\"tooltipPlacement\".concat((0, _helpers.capitalize)(actualPlacement))])\n        }, title));\n      })));\n    }\n  }]);\n  return Tooltip;\n}(_react.default.Component);\n\nTooltip.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Tooltip reference element.\n   */\n  children: _propTypes.default.element.isRequired,\n\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: _propTypes.default.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: _propTypes.default.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: _propTypes.default.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This property won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: _propTypes.default.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: _propTypes.default.number,\n\n  /**\n   * The relationship between the tooltip and the wrapper component is not clear from the DOM.\n   * By providing this property, we can use aria-describedby to solve the accessibility issue.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This property won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: _propTypes.default.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: _propTypes.default.number,\n\n  /**\n   * Callback fired when the tooltip requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback fired when the tooltip requests to be open.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * Tooltip placement\n   */\n  placement: _propTypes.default.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Properties applied to the `Popper` element.\n   */\n  PopperProps: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  theme: _propTypes.default.object.isRequired,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: _propTypes.default.node.isRequired\n} : {};\nTooltip.defaultProps = {\n  disableFocusListener: false,\n  disableHoverListener: false,\n  disableTouchListener: false,\n  enterDelay: 0,\n  enterTouchDelay: 1000,\n  leaveDelay: 0,\n  leaveTouchDelay: 1500,\n  placement: 'bottom'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiTooltip',\n  withTheme: true\n})(Tooltip);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}