{"ast":null,"code":"var _jsxFileName = \"/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/Prescriptions/PrescriptionsForm.js\";\n// Importing React since we are using React.\nimport React from 'react'; // Importing UI components from material-ui-next\n\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport { InputLabel } from 'material-ui/Input';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\n\nconst styles = theme => ({\n  textField: {\n    marginTop: 60\n  },\n  // Tell Material-UI what's the font-size on the html element is.\n  typography: {\n    htmlFontSize: 40\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: theme.spacing.unit * 3,\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A'\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white'\n  },\n  formError: {\n    color: 'red'\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10\n  }\n});\n\nclass PrescriptionsForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDoctorMenuOption = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      event.preventDefault();\n      this.props.handlePrescriptionDoctorChange(event);\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          doctors = _this$props.doctors;\n    console.log(doctors);\n    return React.createElement(Card, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"headline\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Add a prescription\"), React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"prescription-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"prescription-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Name\", React.createElement(Tooltip, {\n      title: \"Enter the name of the prescription to help identify the prescription later.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"prescription-name\",\n      type: \"text\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.props.prescriptionName,\n      onChange: this.props.handlePrescriptionNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.prescriptionNameError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"prescribing-doctor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Doctor who prescribed\", React.createElement(Tooltip, {\n      title: \"Use the drop-down list to select the name of the prescribing doctor.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"prescribedDoctor\",\n      select: true,\n      InputLabelProps: {\n        shrink: true\n      },\n      className: classes.textField,\n      value: this.state.value,\n      onChange: this.handleDoctorMenuOption,\n      SelectProps: {\n        name: 'value'\n      },\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, doctors.map(doctor => {\n      return React.createElement(MenuItem, {\n        key: doctor._id,\n        value: doctor.lastname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Dr. \", doctor.lastname);\n    })), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.props.prescriptionDoctorError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"date-prescribed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Date prescribed\", React.createElement(Tooltip, {\n      title: \"Use the date picker to enter the date when the prescription was prescribed.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"date-prescribed\",\n      type: \"date\",\n      defaultValue: \"MM-DD-YYYY\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.props.prescriptionDate,\n      onChange: this.props.handlePrescriptionDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.props.prescriptionDateError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"prescription-amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Dose amount\", React.createElement(Tooltip, {\n      title: \"Enter the amount that was prescribed. For example, 10mLs.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"prescription-amount\",\n      type: \"text\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.props.prescriptionAmount,\n      onChange: this.props.handlePrescriptionAmountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.props.prescriptionAmountError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"prescription-directions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Directions for use\", React.createElement(Tooltip, {\n      title: \"Enter specific directions, warnings, or other information regarding this prescription.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"prescription-directions\",\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.props.prescriptionDirections,\n      onChange: this.props.handlePrescriptionDirectionsChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.props.prescriptionDirectionsError)), React.createElement(Button, {\n      size: \"large\",\n      className: classes.button,\n      onClick: this.props.handleFormSubmit,\n      color: \"primary\",\n      variant: \"raised\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Add prescription\"), React.createElement(Typography, {\n      className: classes.formSuccess,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, this.props.formSuccessMessage))));\n  }\n\n}\n\nexport default withStyles(styles)(PrescriptionsForm);","map":{"version":3,"sources":["/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/Prescriptions/PrescriptionsForm.js"],"names":["React","Typography","MenuItem","FormControl","Button","TextField","Card","CardContent","withStyles","InputLabel","Tooltip","IconButton","styles","theme","textField","marginTop","typography","htmlFontSize","root","display","flexWrap","spacing","unit","borderStyle","borderWidth","borderColor","formControl","minWidth","button","padding","backgroundColor","color","formError","formSuccess","PrescriptionsForm","Component","handleDoctorMenuOption","event","setState","target","name","value","preventDefault","props","handlePrescriptionDoctorChange","state","render","classes","doctors","console","log","shrink","prescriptionName","handlePrescriptionNameChange","prescriptionNameError","map","doctor","_id","lastname","prescriptionDoctorError","prescriptionDate","handlePrescriptionDateChange","prescriptionDateError","prescriptionAmount","handlePrescriptionAmountChange","prescriptionAmountError","prescriptionDirections","handlePrescriptionDirectionsChange","prescriptionDirectionsError","handleFormSubmit","formSuccessMessage"],"mappings":"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","sourcesContent":["// Importing React since we are using React.\nimport React from 'react';\n// Importing UI components from material-ui-next\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport { InputLabel } from 'material-ui/Input';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\n\nconst styles = theme => ({\n  textField: {\n    marginTop: 60,\n  },\n  // Tell Material-UI what's the font-size on the html element is.\n  typography: {\n    htmlFontSize: 40,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: theme.spacing.unit * 3,\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30,\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white',\n  },\n  formError: {\n    color: 'red',\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10,\n  }\n});\n\nclass PrescriptionsForm extends React.Component {\n  handleDoctorMenuOption = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    event.preventDefault();\n    this.props.handlePrescriptionDoctorChange(event);\n  }\n\n  state = {\n    value: '',\n  }\n\n  render() {\n    const { classes, doctors } = this.props;\n    console.log(doctors);\n\n    return (\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography gutterBottom variant=\"headline\" component=\"h2\">\n              Add a prescription\n            </Typography>\n            <form noValidate autoComplete=\"off\" id=\"prescription-form\">\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"prescription-name\">\n                  <span>\n                    Name\n                    <Tooltip  \n                      title=\"Enter the name of the prescription to help identify the prescription later.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"prescription-name\"\n                  type=\"text\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                      shrink: true,\n                  }}\n                  value={this.props.prescriptionName}\n                  onChange={this.props.handlePrescriptionNameChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.prescriptionNameError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"prescribing-doctor\">\n                  <span>\n                    Doctor who prescribed\n                    <Tooltip  \n                      title=\"Use the drop-down list to select the name of the prescribing doctor.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField \n                  id='prescribedDoctor'\n                  select\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  className={classes.textField} \n                  value={this.state.value}\n                  onChange={this.handleDoctorMenuOption} \n                  SelectProps={{ name: 'value'}} \n                  margin=\"normal\">\n                    {doctors.map(doctor => {\n                      return <MenuItem key={doctor._id} value={doctor.lastname}>Dr. {doctor.lastname}</MenuItem>;\n                    })}\n                  </TextField>\n                  <Typography className={classes.formError} component=\"p\">{this.props.prescriptionDoctorError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"date-prescribed\">\n                  <span>\n                    Date prescribed\n                    <Tooltip  \n                      title=\"Use the date picker to enter the date when the prescription was prescribed.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"date-prescribed\"\n                  type=\"date\"\n                  defaultValue=\"MM-DD-YYYY\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                      shrink: true,\n                  }}\n                  value={this.props.prescriptionDate}\n                  onChange={this.props.handlePrescriptionDateChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.prescriptionDateError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"prescription-amount\">\n                  <span>\n                    Dose amount\n                    <Tooltip  \n                      title=\"Enter the amount that was prescribed. For example, 10mLs.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"prescription-amount\"\n                  type=\"text\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                      shrink: true,\n                  }}\n                  value={this.props.prescriptionAmount}\n                  onChange={this.props.handlePrescriptionAmountChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.prescriptionAmountError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"prescription-directions\">\n                  <span>\n                    Directions for use\n                    <Tooltip  \n                      title=\"Enter specific directions, warnings, or other information regarding this prescription.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"prescription-directions\"\n                  InputLabelProps={{\n                      shrink: true,\n                  }}\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.props.prescriptionDirections}\n                  onChange={this.props.handlePrescriptionDirectionsChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.prescriptionDirectionsError}</Typography>\n              </FormControl>\n\n              <Button\n                size=\"large\"\n                className={classes.button}\n                onClick={this.props.handleFormSubmit}\n                color=\"primary\" \n                variant=\"raised\"\n              >\n                Add prescription\n              </Button>\n              <Typography className={classes.formSuccess} component=\"p\">{this.props.formSuccessMessage}</Typography>\n            </form>\n          </CardContent>\n        </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(PrescriptionsForm);\n"]},"metadata":{},"sourceType":"module"}