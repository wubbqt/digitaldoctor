{"ast":null,"code":"var _jsxFileName = \"/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/SymptomJournal/SymptomForm.js\";\n// Importing React since we are using React.\nimport React from 'react'; // Importing material-ui components and style.\n\nimport TextField from 'material-ui/TextField';\nimport { InputLabel } from 'material-ui/Input';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton'; // Style\n\nconst styles = theme => ({\n  textField: {\n    marginTop: 60\n  },\n  // Tell Material-UI what's the font-size on the html element is.\n  typography: {\n    htmlFontSize: 40\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: theme.spacing.unit * 3,\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A'\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white'\n  },\n  formError: {\n    color: 'red'\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10\n  }\n});\n\nclass SymptomTextFields extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSymptomSelectChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      event.preventDefault();\n      this.props.handleSymptomTypeChange(event);\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"headline\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Add a symptom\"), React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"symptom-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"select-symptom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Select symptom type\", React.createElement(Tooltip, {\n      title: \"Select a symptom from the drop-down list.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"select-symptom\",\n      select: true,\n      InputLabelProps: {\n        shrink: true\n      },\n      className: classes.textField,\n      value: this.state.value,\n      onChange: this.handleSymptomSelectChange,\n      SelectProps: {\n        name: 'value'\n      },\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(MenuItem, {\n      value: \"Dizzy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Dizzy\"), React.createElement(MenuItem, {\n      value: \"Shortness of breath\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Shortness of breath\"), React.createElement(MenuItem, {\n      value: \"Fainted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Fainted\"), React.createElement(MenuItem, {\n      value: \"Swelling\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Swelling\"), React.createElement(MenuItem, {\n      value: \"Heart Fluttering\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Heart Fluttering\"), React.createElement(MenuItem, {\n      value: \"Fatigue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Fatigue\"), React.createElement(MenuItem, {\n      value: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Other\")), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.props.symptomTypeError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"symptom-day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Day symptom occurred\", React.createElement(Tooltip, {\n      title: \"Use the date picker to enter the day when the symptom occurred.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"symptom-day\",\n      type: \"date\",\n      defaultValue: \"DD-MM-YYYY\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.props.date,\n      onChange: this.props.handleSymptomDayChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.props.symptomDayError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"symptom-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Time symptom occurred (HH:MM AM/PM)\", React.createElement(Tooltip, {\n      title: \"Use the time picker to enter the time when the symptom occurred.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"symptom-time\",\n      type: \"time\",\n      defaultValue: \"\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.props.time,\n      onChange: this.props.handleSymptomTimeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.props.symptomTimeError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"additional-symptom-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Additional information you want to share with your doctor\", React.createElement(Tooltip, {\n      title: \"Enter any additional notes to discuss with your doctor.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"additional-symptom-info\",\n      InputLabelProps: {\n        shrink: true\n      },\n      className: classes.textField,\n      multiline: \"true\",\n      rows: 3,\n      rowsMax: 4,\n      value: this.props.info,\n      onChange: this.props.handleSymptomInfoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.props.symptomInfoError)), React.createElement(Button, {\n      size: \"large\",\n      className: classes.button,\n      onClick: this.props.handleFormSubmit,\n      color: \"primary\",\n      variant: \"raised\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Add symptom\"), React.createElement(Typography, {\n      className: classes.formSuccess,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.props.formSuccessMessage)))));\n  }\n\n}\n\nexport default withStyles(styles)(SymptomTextFields);","map":{"version":3,"sources":["/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/SymptomJournal/SymptomForm.js"],"names":["React","TextField","InputLabel","Card","CardContent","withStyles","Typography","MenuItem","FormControl","Button","Tooltip","IconButton","styles","theme","textField","marginTop","typography","htmlFontSize","root","display","flexWrap","spacing","unit","borderStyle","borderWidth","borderColor","formControl","minWidth","button","padding","backgroundColor","color","formError","formSuccess","SymptomTextFields","Component","handleSymptomSelectChange","event","setState","target","name","value","preventDefault","props","handleSymptomTypeChange","state","render","classes","console","log","shrink","symptomTypeError","date","handleSymptomDayChange","symptomDayError","time","handleSymptomTimeChange","symptomTimeError","info","handleSymptomInfoChange","symptomInfoError","handleFormSubmit","formSuccessMessage"],"mappings":"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","sourcesContent":["// Importing React since we are using React.\nimport React from 'react';\n// Importing material-ui components and style.\nimport TextField from 'material-ui/TextField';\nimport { InputLabel } from 'material-ui/Input';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\n\n// Style\nconst styles = theme => ({\n  textField: {\n    marginTop: 60,\n  },\n  // Tell Material-UI what's the font-size on the html element is.\n  typography: {\n    htmlFontSize: 40,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: theme.spacing.unit * 3,\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30,\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white',\n  },\n  formError: {\n    color: 'red',\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10,\n  }\n});\n\nclass SymptomTextFields extends React.Component {\n  handleSymptomSelectChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    event.preventDefault();\n    this.props.handleSymptomTypeChange(event);\n  }\n\n  state = {\n    value: '',\n  }\n\n  render() {\n    const { classes } = this.props;\n    console.log(this.props);\n\n    return (\n      <div>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography gutterBottom variant=\"headline\" component=\"h2\">\n            Add a symptom\n            </Typography>\n            <form noValidate autoComplete=\"off\" id=\"symptom-form\">\n              <FormControl className={classes.formControl} fullWidth>     \n                <InputLabel htmlFor=\"select-symptom\">\n                  <span>\n                    Select symptom type\n                    <Tooltip  \n                      title=\"Select a symptom from the drop-down list.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>     \n                <TextField \n                  id='select-symptom'\n                  select\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  className={classes.textField} \n                  value={this.state.value}\n                  onChange={this.handleSymptomSelectChange}\n                  SelectProps={{ name: 'value'}} \n                  margin=\"normal\">\n                    <MenuItem value=\"\"></MenuItem>\n                    <MenuItem value=\"Dizzy\">Dizzy</MenuItem>\n                    <MenuItem value=\"Shortness of breath\">Shortness of breath</MenuItem>\n                    <MenuItem value=\"Fainted\">Fainted</MenuItem>\n                    <MenuItem value=\"Swelling\">Swelling</MenuItem>\n                    <MenuItem value=\"Heart Fluttering\">Heart Fluttering</MenuItem>\n                    <MenuItem value=\"Fatigue\">Fatigue</MenuItem>\n                    <MenuItem value=\"Other\">Other</MenuItem>\n                </TextField>\n                <Typography className={classes.formError} component=\"p\">{this.props.symptomTypeError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"symptom-day\">\n                  <span>\n                    Day symptom occurred\n                    <Tooltip  \n                      title=\"Use the date picker to enter the day when the symptom occurred.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"symptom-day\"\n                  type=\"date\"\n                  defaultValue=\"DD-MM-YYYY\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.props.date}\n                  onChange={this.props.handleSymptomDayChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.symptomDayError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"symptom-time\">\n                  <span>\n                    Time symptom occurred (HH:MM AM/PM)\n                    <Tooltip  \n                      title=\"Use the time picker to enter the time when the symptom occurred.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"symptom-time\"\n                  type=\"time\"\n                  defaultValue=\"\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.props.time}\n                  onChange={this.props.handleSymptomTimeChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.symptomTimeError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"additional-symptom-info\">\n                  <span>\n                    Additional information you want to share with your doctor\n                    <Tooltip \n                      title=\"Enter any additional notes to discuss with your doctor.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"additional-symptom-info\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  className={classes.textField}\n                  multiline=\"true\"\n                  rows={3}\n                  rowsMax={4}\n                  value={this.props.info}\n                  onChange={this.props.handleSymptomInfoChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.symptomInfoError}</Typography>\n              </FormControl>\n\n              <Button \n                size=\"large\" \n                className={classes.button} \n                onClick={this.props.handleFormSubmit}\n                color=\"primary\" \n                variant=\"raised\">\n                  Add symptom\n              </Button>\n              <Typography className={classes.formSuccess} component=\"p\">{this.props.formSuccessMessage}</Typography>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SymptomTextFields);\n"]},"metadata":{},"sourceType":"module"}