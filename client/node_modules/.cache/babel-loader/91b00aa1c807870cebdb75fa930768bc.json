{"ast":null,"code":"var _jsxFileName = \"/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/Appointments/Appointments.js\";\nimport React, { Component } from \"react\";\nimport AppointmentsForm from './AppointmentsForm';\nimport AppointmentsList from './AppointmentsList';\nimport AppointmentAPI from '../../utils/AppointmentAPI';\nimport DoctorsAPI from '../../utils/DoctorsAPI';\nimport ClinicsAPI from '../../utils/ClinicsAPI';\nimport { withStyles } from 'material-ui/styles';\nimport Table, { TableBody, TableCell, TableHead, TableRow } from 'material-ui/Table';\nimport Paper from 'material-ui/Paper';\nimport Typography from 'material-ui/Typography';\nimport Grid from 'material-ui/Grid';\nimport Sidebar from '../../Components/Sidebar';\nimport NavBar from '../../Components/AppBar';\n\nconst styles = theme => ({\n  root: theme.mixins.gutters({\n    marginTop: theme.spacing.unit * 3,\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n    display: 'block',\n    overflowX: 'auto',\n    maxWidth: '80%'\n  }),\n  table: {\n    minWidth: 700,\n    tableLayout: 'auto',\n    display: 'block',\n    width: '100%',\n    overflowX: 'auto'\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: 'theme.palette.background.default'\n    }\n  },\n  appFrame: {\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%'\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#86BBD8',\n    padding: theme.spacing.unit * 3\n  },\n  heading: {\n    marginTop: 40\n  }\n});\n\nclass Appointments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      appointmentName: \"\",\n      appointmentDoctor: \"\",\n      appointmentDate: \"\",\n      appointmentTime: \"\",\n      appointments: [],\n      doctors: [],\n      clinics: [],\n      appointmentNameError: \"\",\n      appointmentDoctorError: \"\",\n      appointmentDateError: \"\",\n      appointmentTimeError: \"\",\n      formSuccessMessage: \"\"\n    };\n\n    this.loadAppointments = () => {\n      AppointmentAPI.getAppointments().then(res => this.setState({\n        appointments: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.deleteAppointment = id => {\n      AppointmentAPI.deleteAppointment(id).then(res => this.loadAppointments()).catch(err => console.log(err));\n    };\n\n    this.loadDoctors = () => {\n      DoctorsAPI.getDoctors().then(res => this.setState({\n        doctors: res.data\n      })).catch(err => console.log('getting doctors did not work: ', err));\n    };\n\n    this.loadClinics = () => {\n      ClinicsAPI.getClinics().then(res => this.setState({\n        clinics: res.data\n      })).catch(err => console.log('getting clinics did not work: ', err));\n    };\n\n    this.handleAppointmentNameChange = event => {\n      this.setState({\n        appointmentName: event.target.value,\n        appointmentNameError: \"\",\n        formSuccessMessage: \"\"\n      });\n    };\n\n    this.handleAppointmentDoctorChange = event => {\n      this.setState({\n        appointmentDoctor: event.target.value,\n        appointmentDoctorError: \"\",\n        formSuccessMessage: \"\"\n      });\n    };\n\n    this.handleAppointmentDateChange = event => {\n      this.setState({\n        appointmentDate: event.target.value,\n        appointmentDateError: \"\",\n        formSuccessMessage: \"\"\n      });\n    };\n\n    this.handleAppointmentTimeChange = event => {\n      this.setState({\n        appointmentTime: event.target.value,\n        appointmentTimeError: \"\",\n        formSuccessMessage: \"\"\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.appointmentName === \"\") {\n        this.setState({\n          appointmentNameError: \"Enter a name for the appointment.\"\n        });\n      }\n\n      if (this.state.appointmentDoctor === \"\") {\n        this.setState({\n          appointmentDoctorError: \"Select the doctor associated with the appointment from the drop-down list.\"\n        });\n      }\n\n      if (this.state.appointmentDate === \"\" || this.state.appointmentDate === \"mm/dd/yyyy\") {\n        this.setState({\n          appointmentDateError: \"Use the date picker to select the date of the appointment.\"\n        });\n      }\n\n      if (this.state.appointmentTime === \"\") {\n        this.setState({\n          appointmentTimeError: \"Use the time picker to select the time of the appointment in HH:MM AM/PM format.\"\n        });\n      } else {\n        AppointmentAPI.saveAppointment({\n          appointmentName: this.state.appointmentName,\n          doctor: this.state.appointmentDoctor,\n          date: this.state.appointmentDate,\n          time: this.state.appointmentTime\n        }).then(res => this.loadAppointments()).catch(err => console.log(err));\n        this.setState({\n          formSuccessMessage: \"\".concat(this.state.appointmentName, \" with Dr. \").concat(this.state.appointmentDoctor, \" on \").concat(this.state.appointmentDate, \" added successfully!\")\n        });\n        document.getElementById('appointment-form').reset();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadAppointments();\n    this.loadDoctors();\n    this.loadClinics();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return [React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.appFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"display1\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Appointments\"))), React.createElement(\"div\", {\n      className: \"main-content-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Name\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Doctor\")), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Date\")), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Time (HH:MM)\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }))), React.createElement(TableBody, {\n      className: classes.tabledata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.state.appointments.map(appointment => {\n      return React.createElement(AppointmentsList, {\n        id: appointment._id,\n        key: appointment._id,\n        name: appointment.appointmentName,\n        date: appointment.date,\n        time: appointment.time,\n        doctor: appointment.doctor,\n        clinic: appointment.clinic,\n        deleteAppointment: this.deleteAppointment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      });\n    }))))))), React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      className: classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(AppointmentsForm, {\n      doctors: this.state.doctors,\n      clinics: this.state.clinics,\n      handleFormSubmit: this.handleFormSubmit,\n      handleAppointmentNameChange: this.handleAppointmentNameChange,\n      handleAppointmentDoctorChange: this.handleAppointmentDoctorChange,\n      handleAppointmentDateChange: this.handleAppointmentDateChange,\n      handleAppointmentTimeChange: this.handleAppointmentTimeChange,\n      handleAppointmentClinicChange: this.handleAppointmentClinicChange,\n      appointmentNameError: this.state.appointmentNameError,\n      appointmentDoctorError: this.state.appointmentDoctorError,\n      appointmentDateError: this.state.appointmentDateError,\n      appointmentTimeError: this.state.appointmentTimeError,\n      formSuccessMessage: this.state.formSuccessMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })))))))];\n  }\n\n}\n\nexport default withStyles(styles)(Appointments);","map":{"version":3,"sources":["/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/Appointments/Appointments.js"],"names":["React","Component","AppointmentsForm","AppointmentsList","AppointmentAPI","DoctorsAPI","ClinicsAPI","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Typography","Grid","Sidebar","NavBar","styles","theme","root","mixins","gutters","marginTop","spacing","unit","borderStyle","borderWidth","borderColor","display","overflowX","maxWidth","table","minWidth","tableLayout","width","tableWrapper","row","backgroundColor","appFrame","zIndex","overflow","position","content","flexGrow","padding","heading","Appointments","state","appointmentName","appointmentDoctor","appointmentDate","appointmentTime","appointments","doctors","clinics","appointmentNameError","appointmentDoctorError","appointmentDateError","appointmentTimeError","formSuccessMessage","loadAppointments","getAppointments","then","res","setState","data","catch","err","console","log","deleteAppointment","id","loadDoctors","getDoctors","loadClinics","getClinics","handleAppointmentNameChange","event","target","value","handleAppointmentDoctorChange","handleAppointmentDateChange","handleAppointmentTimeChange","handleFormSubmit","preventDefault","saveAppointment","doctor","date","time","document","getElementById","reset","componentDidMount","render","classes","props","tabledata","map","appointment","_id","clinic","handleAppointmentClinicChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AppointmentsForm from './AppointmentsForm';\nimport AppointmentsList from './AppointmentsList';\nimport AppointmentAPI from '../../utils/AppointmentAPI';\nimport DoctorsAPI from '../../utils/DoctorsAPI';\nimport ClinicsAPI from '../../utils/ClinicsAPI';\nimport { withStyles } from 'material-ui/styles';\nimport Table, { TableBody, TableCell, TableHead, TableRow } from 'material-ui/Table';\nimport Paper from 'material-ui/Paper';\nimport Typography from 'material-ui/Typography';\nimport Grid from 'material-ui/Grid';\nimport Sidebar from '../../Components/Sidebar';\nimport NavBar from '../../Components/AppBar';\n\n\nconst styles = theme => ({\n  root: theme.mixins.gutters({\n    marginTop: theme.spacing.unit * 3,\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n    display: 'block',\n    overflowX: 'auto',\n    maxWidth: '80%',\n  }),\n  table: {\n    minWidth: 700,\n    tableLayout: 'auto',\n    display: 'block',\n    width: '100%',\n    overflowX: 'auto',\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: 'theme.palette.background.default',\n    },\n  },\n  appFrame: {\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#86BBD8',\n    padding: theme.spacing.unit * 3,\n  },\n  heading: {\n    marginTop: 40,\n  },\n});\n\nclass Appointments extends Component {\n  state = {\n    appointmentName: \"\",\n    appointmentDoctor: \"\",\n    appointmentDate: \"\",\n    appointmentTime: \"\",\n    appointments: [],\n    doctors: [],\n    clinics: [],\n    appointmentNameError: \"\",\n    appointmentDoctorError: \"\",\n    appointmentDateError: \"\",\n    appointmentTimeError: \"\",\n    formSuccessMessage: \"\",\n\n  };\n\n  componentDidMount() {\n    this.loadAppointments();\n    this.loadDoctors();\n    this.loadClinics();\n  }\n\n  loadAppointments = () => {\n    AppointmentAPI.getAppointments()\n      .then(res =>\n        this.setState({ appointments: res.data})\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteAppointment = id => {\n    AppointmentAPI.deleteAppointment(id)\n      .then(res => this.loadAppointments())\n      .catch(err => console.log(err));\n  };\n\n  loadDoctors = () => {\n    DoctorsAPI.getDoctors()\n      .then(res =>\n        this.setState({ doctors: res.data })\n      )\n      .catch(err => console.log('getting doctors did not work: ', err));\n  };\n\n  loadClinics = () => {\n    ClinicsAPI.getClinics()\n      .then(res =>\n        this.setState({ clinics: res.data })\n      )\n      .catch(err => console.log('getting clinics did not work: ', err));\n  };\n\n  handleAppointmentNameChange = (event) => {\n    this.setState({ \n      appointmentName: event.target.value,\n      appointmentNameError: \"\",\n      formSuccessMessage: \"\",\n    });\n  }\n\n  \n  handleAppointmentDoctorChange = (event) => {\n    this.setState({ \n      appointmentDoctor: event.target.value,\n      appointmentDoctorError: \"\",\n      formSuccessMessage: \"\",\n    });\n  }\n\n  \n  handleAppointmentDateChange = (event) => {\n    this.setState({ \n      appointmentDate: event.target.value,\n      appointmentDateError: \"\",\n      formSuccessMessage: \"\",\n    });\n  }\n\n  \n  handleAppointmentTimeChange = (event) => {\n    this.setState({ \n      appointmentTime: event.target.value,\n      appointmentTimeError: \"\",\n      formSuccessMessage: \"\",\n    });\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.appointmentName === \"\") {\n      this.setState({\n        appointmentNameError: \"Enter a name for the appointment.\"\n      })\n    }\n\n    if (this.state.appointmentDoctor === \"\") {\n      this.setState({\n        appointmentDoctorError: \"Select the doctor associated with the appointment from the drop-down list.\"\n      })\n    }\n\n    if (this.state.appointmentDate === \"\" || this.state.appointmentDate === \"mm/dd/yyyy\") {\n      this.setState({\n        appointmentDateError: \"Use the date picker to select the date of the appointment.\"\n      })\n    }\n\n    if (this.state.appointmentTime === \"\") {\n      this.setState({\n        appointmentTimeError: \"Use the time picker to select the time of the appointment in HH:MM AM/PM format.\"\n      })\n    }\n\n    else {\n      AppointmentAPI.saveAppointment({\n        appointmentName: this.state.appointmentName,\n        doctor: this.state.appointmentDoctor,\n        date: this.state.appointmentDate,\n        time: this.state.appointmentTime,\n      })\n        .then(res => this.loadAppointments())\n        .catch(err => console.log(err));\n\n      this.setState({\n          formSuccessMessage: `${this.state.appointmentName} with Dr. ${this.state.appointmentDoctor} on ${this.state.appointmentDate} added successfully!`,\n      });\n\n      \n      document.getElementById('appointment-form').reset();\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return [\n      <NavBar />,\n      <div className={classes.appFrame}>\n        <Sidebar />\n        <main className={classes.content}>\n          <div style={{ padding: 70 }}>\n            <Grid container spacing={24}>\n              <Grid item xs={12}>\n                <Typography variant=\"display1\" align=\"left\">\n                  Appointments\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <div className=\"main-content-section\">\n              <Grid container spacing={24}>\n                <Grid item xs={12}>\n                  <Paper className={classes.root}>\n                    <div className={classes.tableWrapper}>\n                      <Table className={classes.table}>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell><b>Name</b></TableCell>\n                            <TableCell><b>Doctor</b></TableCell>\n                            <TableCell numeric><b>Date</b></TableCell>\n                            <TableCell numeric><b>Time (HH:MM)</b></TableCell>\n                            <TableCell></TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody className={classes.tabledata}>\n                          {this.state.appointments.map(appointment => {\n                            return (\n                              <AppointmentsList\n                                id={appointment._id}\n                                key={appointment._id}\n                                name={appointment.appointmentName}\n                                date={appointment.date}\n                                time={appointment.time}\n                                doctor={appointment.doctor}\n                                clinic={appointment.clinic}\n                                deleteAppointment={this.deleteAppointment}\n                              />\n                            );\n                          })}\n                        </TableBody>\n                      </Table>\n                    </div>\n                  </Paper>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={24} className={classes.heading}>\n                <Grid item xs={12}>\n                  <AppointmentsForm\n                    doctors={this.state.doctors}\n                    clinics={this.state.clinics}\n                    handleFormSubmit={this.handleFormSubmit}\n                    handleAppointmentNameChange={this.handleAppointmentNameChange}\n                    handleAppointmentDoctorChange={this.handleAppointmentDoctorChange}\n                    handleAppointmentDateChange={this.handleAppointmentDateChange}\n                    handleAppointmentTimeChange={this.handleAppointmentTimeChange}\n                    handleAppointmentClinicChange={this.handleAppointmentClinicChange}\n                    appointmentNameError = {this.state.appointmentNameError}\n                    appointmentDoctorError = {this.state.appointmentDoctorError}\n                    appointmentDateError  = {this.state.appointmentDateError}\n                    appointmentTimeError = {this.state.appointmentTimeError}\n                    formSuccessMessage = {this.state.formSuccessMessage} \n                  />\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </main>\n      </div>\n    ];\n  }\n}\n\nexport default withStyles(styles)(Appointments);\n"]},"metadata":{},"sourceType":"module"}