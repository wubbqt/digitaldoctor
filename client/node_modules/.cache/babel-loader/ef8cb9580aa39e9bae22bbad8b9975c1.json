{"ast":null,"code":"var _jsxFileName = \"/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/MedLog/LogForm.js\";\nimport React from 'react';\nimport Typography from 'material-ui/Typography';\nimport { InputLabel } from 'material-ui/Input';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nconst styles = {\n  textField: {\n    marginTop: 60\n  },\n  typography: {\n    htmlFontSize: 40\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A'\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white'\n  },\n  formError: {\n    color: 'red'\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10\n  }\n};\n\nclass LogForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDoctorMenuOption = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      event.preventDefault();\n      console.log(event.target.value);\n      this.props.handleLogDoctorChange(event);\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          doctors = _this$props.doctors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"headline\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Add doctor notes\"), React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"log-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"doctor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Select a doctor\", React.createElement(Tooltip, {\n      title: \"Select a doctor to associate with this note.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"doctor\",\n      select: true,\n      InputLabelProps: {\n        shrink: true\n      },\n      className: classes.textField,\n      value: this.state.value,\n      onChange: this.handleDoctorMenuOption,\n      SelectProps: {\n        name: 'value'\n      },\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, doctors.map(doctor => {\n      return React.createElement(MenuItem, {\n        key: doctor._id,\n        value: doctor.lastname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Dr. \", doctor.lastname);\n    })), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.logDoctorError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"doctor visit date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Date of doctor visit\", React.createElement(Tooltip, {\n      title: \"Use the date picker to specify the date of the doctor visit.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"doctor-visit-date\",\n      type: \"date\",\n      defaultValue: \"MM-DD-YYYY\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.props.logDate,\n      onChange: this.props.handleLogDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.props.logDateError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"reason for visit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Reason for visit\", React.createElement(Tooltip, {\n      title: \"Specify the reason for visiting the doctor. For example, 3 month follow up.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"reason-for-visit\",\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.props.logVisitReason,\n      onChange: this.props.handleLogVisitReasonChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.props.logVisitReasonError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"height\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Height (inches)\", React.createElement(Tooltip, {\n      title: \"Enter the height measurement taken at the doctor's office.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"height\",\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.props.logHeight,\n      onChange: this.props.handleLogHeightChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.props.logHeightError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"weight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Weight (pounds)\", React.createElement(Tooltip, {\n      title: \"Enter the weight measurment taken at the doctor's office.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"weight\",\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.props.logWeight,\n      onChange: this.props.handleLogWeightChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, this.props.logWeightError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Visit notes\", React.createElement(Tooltip, {\n      title: \"Enter any additional information regarding your visit to the doctor.\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"help\"))))), React.createElement(TextField, {\n      id: \"log-notes\",\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.props.logNotes,\n      onChange: this.props.handleLogNotesChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.props.logNotesError)), React.createElement(Button, {\n      size: \"large\",\n      variant: \"raised\",\n      className: classes.button,\n      onClick: this.props.handleFormSubmit,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Add notes\"), React.createElement(Typography, {\n      className: classes.formSuccess,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.props.formSuccessMessage)))));\n  }\n\n}\n\nexport default withStyles(styles)(LogForm);","map":{"version":3,"sources":["/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/MedLog/LogForm.js"],"names":["React","Typography","InputLabel","MenuItem","FormControl","Button","TextField","Card","CardContent","withStyles","Tooltip","IconButton","styles","textField","marginTop","typography","htmlFontSize","root","display","flexWrap","borderStyle","borderWidth","borderColor","formControl","minWidth","button","padding","backgroundColor","color","formError","formSuccess","LogForm","Component","handleDoctorMenuOption","event","setState","target","name","value","preventDefault","console","log","props","handleLogDoctorChange","state","render","classes","doctors","shrink","map","doctor","_id","lastname","logDoctorError","logDate","handleLogDateChange","logDateError","logVisitReason","handleLogVisitReasonChange","logVisitReasonError","logHeight","handleLogHeightChange","logHeightError","logWeight","handleLogWeightChange","logWeightError","logNotes","handleLogNotesChange","logNotesError","handleFormSubmit","formSuccessMessage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from 'material-ui/Typography';\nimport { InputLabel } from 'material-ui/Input';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\n\nconst styles = {\n  textField: {\n    marginTop: 60,\n  },\n  typography: {\n    htmlFontSize: 40,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30,\n  },  \n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white',\n  },\n  formError: {\n    color: 'red',\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10,\n  }\n};\n\nclass LogForm extends React.Component {\n  handleDoctorMenuOption = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    event.preventDefault();\n    console.log(event.target.value);\n    this.props.handleLogDoctorChange(event);\n  }\n\n  state = {\n    value: '',\n  }\n\n  render() {\n    const { classes, doctors } = this.props;\n\n    return (\n      <div>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography gutterBottom variant=\"headline\" component=\"h2\">\n              Add doctor notes\n            </Typography>\n            <form noValidate autoComplete=\"off\" id=\"log-form\">\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"doctor\">\n                  <span>\n                    Select a doctor \n                    <Tooltip  \n                      title=\"Select a doctor to associate with this note.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField \n                  id='doctor'\n                  select\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  className={classes.textField} \n                  value={this.state.value}\n                  onChange={this.handleDoctorMenuOption} \n                  SelectProps={{ name: 'value'}} \n                  margin=\"normal\">\n                    {doctors.map(doctor => {\n                      return <MenuItem key={doctor._id} value={doctor.lastname}>Dr. {doctor.lastname}</MenuItem>;\n                    })}\n                  </TextField>\n                  <Typography className={classes.formError} component=\"p\">{this.props.logDoctorError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"doctor visit date\">\n                  <span>\n                    Date of doctor visit \n                    <Tooltip  \n                      title=\"Use the date picker to specify the date of the doctor visit.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"doctor-visit-date\"\n                  type=\"date\"\n                  defaultValue=\"MM-DD-YYYY\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.props.logDate}\n                  onChange={this.props.handleLogDateChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.logDateError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"reason for visit\">\n                  <span>\n                    Reason for visit\n                    <Tooltip  \n                      title=\"Specify the reason for visiting the doctor. For example, 3 month follow up.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>  \n                </InputLabel>\n                <TextField\n                  id=\"reason-for-visit\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.props.logVisitReason}\n                  onChange={this.props.handleLogVisitReasonChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.logVisitReasonError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"height\">\n                  <span>\n                    Height (inches) \n                    <Tooltip  \n                      title=\"Enter the height measurement taken at the doctor's office.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span></InputLabel>\n                <TextField\n                  id=\"height\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.props.logHeight}\n                  onChange={this.props.handleLogHeightChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.logHeightError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"weight\">\n                  <span>\n                    Weight (pounds) \n                    <Tooltip  \n                      title=\"Enter the weight measurment taken at the doctor's office.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>  \n                </InputLabel>\n                <TextField\n                  id=\"weight\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.props.logWeight}\n                  onChange={this.props.handleLogWeightChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.logWeightError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"notes\">\n                  <span>\n                    Visit notes \n                    <Tooltip  \n                      title=\"Enter any additional information regarding your visit to the doctor.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"log-notes\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.props.logNotes}\n                  onChange={this.props.handleLogNotesChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.logNotesError}</Typography>\n              </FormControl>\n\n              <Button \n                size=\"large\" \n                variant=\"raised\" \n                className={classes.button} \n                onClick={this.props.handleFormSubmit}\n                color=\"primary\"\n              >\n                Add notes\n              </Button>\n              <Typography className={classes.formSuccess} component=\"p\">{this.props.formSuccessMessage}</Typography>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(LogForm);\n"]},"metadata":{},"sourceType":"module"}