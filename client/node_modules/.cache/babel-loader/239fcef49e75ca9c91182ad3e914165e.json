{"ast":null,"code":"var _jsxFileName = \"/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/Prescriptions/Prescriptions.js\";\nimport React, { Component } from \"react\";\nimport NavBar from '../../Components/AppBar';\nimport PrescriptionsForm from './PrescriptionsForm';\nimport PrescriptionsList from './PrescriptionsList';\nimport PrescriptionsAPI from '../../utils/PrescriptionsAPI';\nimport DoctorsAPI from '../../utils/DoctorsAPI';\nimport { withStyles } from 'material-ui/styles';\nimport Typography from 'material-ui/Typography';\nimport Grid from 'material-ui/Grid';\nimport Sidebar from '../../Components/Sidebar';\n\nconst styles = theme => ({\n  appFrame: {\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%'\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#86BBD8',\n    padding: theme.spacing.unit * 3\n  }\n});\n\nclass Prescriptions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      prescriptionName: \"\",\n      prescriptionDoctor: \"\",\n      prescriptionDate: \"\",\n      prescriptionAmount: \"\",\n      prescriptionDirections: \"\",\n      prescriptions: [],\n      prescriptionNameError: \"\",\n      prescriptionDoctorError: \"\",\n      prescriptionAmountError: \"\",\n      prescriptionDirectionsError: \"\",\n      formSuccessMessage: \"\",\n      doctors: []\n    };\n\n    this.loadPrescriptions = () => {\n      PrescriptionsAPI.getPrescriptions().then(res => this.setState({\n        prescriptions: res.data\n      })).catch(err => console.log('loading prescriptions is not working: ' + err));\n    };\n\n    this.loadDoctors = () => {\n      DoctorsAPI.getDoctors().then(res => this.setState({\n        doctors: res.data\n      })).catch(err => console.log('getting doctors did not work: ', err));\n    };\n\n    this.deletePrescription = id => {\n      PrescriptionsAPI.deletePrescription(id).then(res => this.loadPrescriptions()).catch(err => console.log(err));\n    };\n\n    this.handlePrescriptionNameChange = event => {\n      this.setState({\n        prescriptionName: event.target.value,\n        prescriptionNameError: \"\",\n        formSuccessMessage: \"\"\n      });\n    };\n\n    this.handlePrescriptionDoctorChange = event => {\n      this.setState({\n        prescriptionDoctor: event.target.value,\n        prescriptionDoctorError: \"\",\n        formSuccessMessage: \"\"\n      });\n    };\n\n    this.handlePrescriptionDateChange = event => {\n      this.setState({\n        prescriptionDate: event.target.value,\n        prescriptionDateError: \"\",\n        formSuccessMessage: \"\"\n      });\n    };\n\n    this.handlePrescriptionAmountChange = event => {\n      this.setState({\n        prescriptionAmount: event.target.value,\n        prescriptionAmountError: \"\",\n        formSuccessMessage: \"\"\n      });\n    };\n\n    this.handlePrescriptionDirectionsChange = event => {\n      this.setState({\n        prescriptionDirections: event.target.value,\n        prescriptionDirectionsError: \"\",\n        formSuccessMessage: \"\"\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.prescriptionName === \"\") {\n        this.setState({\n          prescriptionNameError: \"Enter the name of the prescription.\"\n        });\n      }\n\n      if (this.state.prescriptionDoctor === \"\") {\n        this.setState({\n          prescriptionDoctorError: \"Select the prescribing doctor from the drop-down list.\"\n        });\n      }\n\n      if (this.state.prescriptionDate === \"\" || this.state.prescriptionDate === \"mm/dd/yyyy\") {\n        this.setState({\n          prescriptionDateError: \"Use the date picker to select the date when the prescription was prescribed.\"\n        });\n      }\n\n      if (this.state.prescriptionAmount === \"\") {\n        this.setState({\n          prescriptionAmountError: \"Enter the amount prescribed.\"\n        });\n      }\n\n      if (this.state.prescriptionDirections === \"\") {\n        this.setState({\n          prescriptionDirectionsError: \"Enter any verbal and/or written directions received regarding this prescription. If not applicable, enter N/A.\"\n        });\n      } else {\n        PrescriptionsAPI.savePrescription({\n          prescriptionName: this.state.prescriptionName,\n          doctorprescribed: this.state.prescriptionDoctor,\n          dateprescribed: this.state.prescriptionDate,\n          amount: this.state.prescriptionAmount,\n          generalinstructions: this.state.prescriptionDirections\n        }).then(res => this.loadPrescriptions()).catch(err => console.log('there is an error in saving the prescription', err));\n        this.setState({\n          formSuccessMessage: \"\".concat(this.state.prescriptionName, \" added successfully!\")\n        });\n        document.getElementById('prescription-form').reset();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadPrescriptions();\n    this.loadDoctors();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return [React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.appFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"display1\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Prescriptions\"))), React.createElement(\"div\", {\n      className: \"main-content-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(PrescriptionsForm, {\n      doctors: this.state.doctors,\n      handleFormSubmit: this.handleFormSubmit,\n      handlePrescriptionNameChange: this.handlePrescriptionNameChange,\n      handlePrescriptionDoctorChange: this.handlePrescriptionDoctorChange,\n      handlePrescriptionDateChange: this.handlePrescriptionDateChange,\n      handlePrescriptionAmountChange: this.handlePrescriptionAmountChange,\n      handlePrescriptionDirectionsChange: this.handlePrescriptionDirectionsChange,\n      prescriptionNameError: this.state.prescriptionNameError,\n      prescriptionDoctorError: this.state.prescriptionDoctorError,\n      prescriptionDateError: this.state.prescriptionDateError,\n      prescriptionAmountError: this.state.prescriptionAmountError,\n      prescriptionDirectionsError: this.state.prescriptionDirectionsError,\n      formSuccessMessage: this.state.formSuccessMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.prescriptions.map(prescription => {\n      return React.createElement(PrescriptionsList, {\n        id: prescription._id,\n        key: prescription._id,\n        prescriptionName: prescription.prescriptionName,\n        prescriptionDoctor: prescription.doctorprescribed,\n        prescriptionDate: prescription.dateprescribed,\n        prescriptionAmount: prescription.amount,\n        prescriptionDirections: prescription.generalinstructions,\n        deletePrescription: this.deletePrescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      });\n    })))))))];\n  }\n\n}\n\nexport default withStyles(styles)(Prescriptions);","map":{"version":3,"sources":["/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/Prescriptions/Prescriptions.js"],"names":["React","Component","NavBar","PrescriptionsForm","PrescriptionsList","PrescriptionsAPI","DoctorsAPI","withStyles","Typography","Grid","Sidebar","styles","theme","appFrame","zIndex","overflow","position","display","width","content","flexGrow","backgroundColor","padding","spacing","unit","Prescriptions","state","prescriptionName","prescriptionDoctor","prescriptionDate","prescriptionAmount","prescriptionDirections","prescriptions","prescriptionNameError","prescriptionDoctorError","prescriptionAmountError","prescriptionDirectionsError","formSuccessMessage","doctors","loadPrescriptions","getPrescriptions","then","res","setState","data","catch","err","console","log","loadDoctors","getDoctors","deletePrescription","id","handlePrescriptionNameChange","event","target","value","handlePrescriptionDoctorChange","handlePrescriptionDateChange","prescriptionDateError","handlePrescriptionAmountChange","handlePrescriptionDirectionsChange","handleFormSubmit","preventDefault","savePrescription","doctorprescribed","dateprescribed","amount","generalinstructions","document","getElementById","reset","componentDidMount","render","classes","props","map","prescription","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from '../../Components/AppBar';\nimport PrescriptionsForm from  './PrescriptionsForm';\nimport PrescriptionsList from './PrescriptionsList';\nimport PrescriptionsAPI from '../../utils/PrescriptionsAPI';\nimport DoctorsAPI from '../../utils/DoctorsAPI';\nimport { withStyles } from 'material-ui/styles';\nimport Typography from 'material-ui/Typography';\nimport Grid from 'material-ui/Grid';\nimport Sidebar from '../../Components/Sidebar';\n\nconst styles = theme => ({\n    appFrame: {\n        zIndex: 1,\n        overflow: 'hidden',\n        position: 'relative',\n        display: 'flex',\n        width: '100%',\n    },\n    content: {\n        flexGrow: 1,\n        backgroundColor: '#86BBD8',\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass Prescriptions extends Component {\n  state = {\n    prescriptionName: \"\",\n    prescriptionDoctor: \"\",\n    prescriptionDate: \"\",\n    prescriptionAmount: \"\",\n    prescriptionDirections: \"\",\n    prescriptions: [],\n    prescriptionNameError: \"\",\n    prescriptionDoctorError: \"\",\n    prescriptionAmountError: \"\",\n    prescriptionDirectionsError: \"\",\n    formSuccessMessage: \"\",\n    doctors: [],\n  };\n\n    componentDidMount() {\n        this.loadPrescriptions();\n        this.loadDoctors();\n    }\n\n    loadPrescriptions = () => {\n        PrescriptionsAPI.getPrescriptions()\n            .then(res =>\n              this.setState({ \n                prescriptions: res.data\n              }))\n            .catch(err => console.log('loading prescriptions is not working: ' + err));\n    };\n\n    loadDoctors = () => {\n      DoctorsAPI.getDoctors()\n        .then(res =>\n          this.setState({ doctors: res.data })\n        )\n        .catch(err => console.log('getting doctors did not work: ', err));\n    };\n\n    deletePrescription = id => {\n        PrescriptionsAPI.deletePrescription(id)\n            .then(res => this.loadPrescriptions())\n            .catch(err => console.log(err));\n    };\n\n    handlePrescriptionNameChange = (event) => {\n        this.setState({ \n          prescriptionName: event.target.value,\n          prescriptionNameError: \"\",\n          formSuccessMessage: \"\",\n        });\n    }\n\n    handlePrescriptionDoctorChange = (event) => {\n        this.setState({ \n          prescriptionDoctor: event.target.value,\n          prescriptionDoctorError: \"\",\n          formSuccessMessage: \"\",\n        });\n    }\n\n    handlePrescriptionDateChange = (event) => {\n        this.setState({ \n          prescriptionDate: event.target.value,\n          prescriptionDateError: \"\",\n          formSuccessMessage: \"\",\n        });\n    }\n\n    handlePrescriptionAmountChange = (event) => {\n        this.setState({ \n          prescriptionAmount: event.target.value,\n          prescriptionAmountError: \"\",\n          formSuccessMessage: \"\",\n        });\n    }\n\n    handlePrescriptionDirectionsChange = (event) => {\n        this.setState({ \n          prescriptionDirections: event.target.value,\n          prescriptionDirectionsError: \"\",\n          formSuccessMessage: \"\",\n        });\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n\n        if (this.state.prescriptionName === \"\") {\n          this.setState({\n            prescriptionNameError: \"Enter the name of the prescription.\"\n          })\n        }\n\n        if (this.state.prescriptionDoctor === \"\") {\n          this.setState({\n            prescriptionDoctorError: \"Select the prescribing doctor from the drop-down list.\"\n          })\n        }\n\n        if (this.state.prescriptionDate === \"\" || this.state.prescriptionDate === \"mm/dd/yyyy\") {\n          this.setState({\n            prescriptionDateError: \"Use the date picker to select the date when the prescription was prescribed.\"\n          })\n        }\n\n        if (this.state.prescriptionAmount === \"\") {\n          this.setState({\n            prescriptionAmountError: \"Enter the amount prescribed.\"\n          })\n        }\n\n        if (this.state.prescriptionDirections === \"\") {\n          this.setState({\n            prescriptionDirectionsError: \"Enter any verbal and/or written directions received regarding this prescription. If not applicable, enter N/A.\"\n          })\n        }\n\n        else {\n          PrescriptionsAPI.savePrescription({\n              prescriptionName: this.state.prescriptionName,\n              doctorprescribed: this.state.prescriptionDoctor,\n              dateprescribed: this.state.prescriptionDate,\n              amount: this.state.prescriptionAmount,\n              generalinstructions: this.state.prescriptionDirections,\n          })\n              .then(res => this.loadPrescriptions())\n              .catch(err => console.log('there is an error in saving the prescription', err));\n          \n          this.setState({\n            formSuccessMessage: `${this.state.prescriptionName} added successfully!`,\n          });\n    \n        document.getElementById('prescription-form').reset();\n        }\n    };\n\n    render() {\n      const { classes } = this.props;\n      return [\n        <NavBar />,\n        <div className={classes.appFrame}>\n          <Sidebar />\n          <main className={classes.content}>\n            <div style={{ padding: 70 }}>\n              <Grid container spacing={24}>\n                <Grid item xs={12}>\n                  <Typography variant=\"display1\" align=\"left\">\n                    Prescriptions\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <div className=\"main-content-section\">\n                <Grid container spacing={16}>\n                  <Grid item xs={12} sm={12} md={6}>\n                    <PrescriptionsForm\n                      doctors={this.state.doctors}\n                      handleFormSubmit={this.handleFormSubmit}\n                      handlePrescriptionNameChange={this.handlePrescriptionNameChange}\n                      handlePrescriptionDoctorChange={this.handlePrescriptionDoctorChange}\n                      handlePrescriptionDateChange={this.handlePrescriptionDateChange}\n                      handlePrescriptionAmountChange={this.handlePrescriptionAmountChange}\n                      handlePrescriptionDirectionsChange={this.handlePrescriptionDirectionsChange}\n                      prescriptionNameError = {this.state.prescriptionNameError}\n                      prescriptionDoctorError = {this.state.prescriptionDoctorError}\n                      prescriptionDateError = {this.state.prescriptionDateError}\n                      prescriptionAmountError = {this.state.prescriptionAmountError}\n                      prescriptionDirectionsError = {this.state.prescriptionDirectionsError} \n                      formSuccessMessage = {this.state.formSuccessMessage}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={6}>\n                    {this.state.prescriptions.map(prescription => {\n                      return (\n                        <PrescriptionsList\n                          id={prescription._id}\n                          key={prescription._id}\n                          prescriptionName={prescription.prescriptionName}\n                          prescriptionDoctor={prescription.doctorprescribed}\n                          prescriptionDate={prescription.dateprescribed}\n                          prescriptionAmount={prescription.amount}\n                          prescriptionDirections={prescription.generalinstructions}\n                          deletePrescription={this.deletePrescription}\n                        />\n                      );\n                    })}\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </main>\n       </div >\n      ];\n    }\n  }\n\nexport default withStyles(styles)(Prescriptions);\n"]},"metadata":{},"sourceType":"module"}