{"ast":null,"code":"var _jsxFileName = \"/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/DoctorsList/DoctorForm.js\";\nimport React, { Component } from 'react';\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport { InputLabel } from 'material-ui/Input';\nconst styles = {\n  textField: {\n    marginTop: 50\n  },\n  typography: {\n    htmlFontSize: 40\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A'\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white'\n  },\n  formError: {\n    color: 'red'\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10\n  }\n};\n\nclass DoctorForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClinicMenuOption = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      event.preventDefault();\n      this.props.handleDoctorClinicChange(event);\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          clinics = _this$props.clinics;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"headline\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Add a doctor\"), React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"doctor-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"first-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"First name\"), React.createElement(TextField, {\n      id: \"first-name\",\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.props.doctorFirstName,\n      onChange: this.props.handleDoctorFirstNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.props.doctorFirstNameError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"last-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(TextField, {\n      id: \"last-name\",\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.props.doctorLastName,\n      onChange: this.props.handleDoctorLastNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.doctorLastNameError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"clinic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Select a clinic\"), React.createElement(TextField, {\n      id: \"clinic\",\n      select: true,\n      InputLabelProps: {\n        shrink: true\n      },\n      className: classes.textField,\n      value: this.state.value,\n      onChange: this.handleClinicMenuOption,\n      SelectProps: {\n        name: 'value'\n      },\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, clinics.map(clinic => {\n      return React.createElement(MenuItem, {\n        key: clinic._id,\n        value: clinic.clinicname,\n        sid: clinic._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, clinic.clinicname);\n    })), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.props.doctorClinicError)), React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"doctor-phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Phone number\"), React.createElement(TextField, {\n      id: \"doctor-phone\",\n      InputLabelProps: {\n        shrink: true\n      },\n      className: classes.textField,\n      value: this.props.doctorPhone,\n      onChange: this.props.handleDoctorPhoneChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.props.doctorPhoneError)), React.createElement(Button, {\n      size: \"large\",\n      className: classes.button,\n      onClick: this.props.handleDoctorFormSubmit,\n      color: \"primary\",\n      variant: \"raised\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Add doctor\"), React.createElement(Typography, {\n      className: classes.formSuccess,\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.props.doctorFormSuccessMessage)))));\n  }\n\n}\n\nexport default withStyles(styles)(DoctorForm);","map":{"version":3,"sources":["/Users/fadialexander/Desktop/digitaldoctor/client/src/containers/DoctorsList/DoctorForm.js"],"names":["React","Component","Typography","MenuItem","FormControl","Button","TextField","Card","CardContent","withStyles","InputLabel","styles","textField","marginTop","typography","htmlFontSize","root","display","flexWrap","borderStyle","borderWidth","borderColor","formControl","minWidth","button","padding","backgroundColor","color","formError","formSuccess","DoctorForm","handleClinicMenuOption","event","setState","target","name","value","preventDefault","props","handleDoctorClinicChange","state","render","classes","clinics","shrink","doctorFirstName","handleDoctorFirstNameChange","doctorFirstNameError","doctorLastName","handleDoctorLastNameChange","doctorLastNameError","map","clinic","_id","clinicname","doctorClinicError","doctorPhone","handleDoctorPhoneChange","doctorPhoneError","handleDoctorFormSubmit","doctorFormSuccessMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,IAAP,IAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GADE;AAIbC,EAAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,EAAE;AADJ,GAJC;AAObC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,WAAW,EAAE,OAHT;AAIJC,IAAAA,WAAW,EAAE,CAJT;AAKJC,IAAAA,WAAW,EAAE;AALT,GAPO;AAcbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,GADC;AAEXV,IAAAA,SAAS,EAAE;AAFA,GAdA;AAkBbW,EAAAA,MAAM,EAAE;AACNX,IAAAA,SAAS,EAAE,EADL;AAENY,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,eAAe,EAAE,SAHX;AAINC,IAAAA,KAAK,EAAE;AAJD,GAlBK;AAwBbC,EAAAA,SAAS,EAAE;AACTD,IAAAA,KAAK,EAAE;AADE,GAxBE;AA2BbE,EAAAA,WAAW,EAAE;AACXF,IAAAA,KAAK,EAAE,OADI;AAEXd,IAAAA,SAAS,EAAE;AAFA;AA3BA,CAAf;;AAiCA,MAAMiB,UAAN,SAAyB7B,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SACjC8B,sBADiC,GACRC,KAAK,IAAI;AAChC,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAApC,OAAd;AACAJ,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKC,KAAL,CAAWC,wBAAX,CAAoCP,KAApC;AACD,KALgC;;AAAA,SAOjCQ,KAPiC,GAOzB;AACNJ,MAAAA,KAAK,EAAE;AADD,KAPyB;AAAA;;AAWjCK,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKH,KAD3B;AAAA,UACCI,OADD,eACCA,OADD;AAAA,UACUC,OADV,eACUA,OADV;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAED,OAAO,CAAC1B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,OAAO,EAAC,UAAjC;AAA4C,MAAA,SAAS,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAoC,MAAA,EAAE,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE0B,OAAO,CAACpB,WAAhC;AAA6C,MAAA,SAAS,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,eAAe,EAAE;AACfsB,QAAAA,MAAM,EAAE;AADO,OAFnB;AAKE,MAAA,MAAM,EAAC,QALT;AAME,MAAA,SAAS,EAAEF,OAAO,CAAC9B,SANrB;AAOE,MAAA,KAAK,EAAE,KAAK0B,KAAL,CAAWO,eAPpB;AAQE,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWQ,2BARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEJ,OAAO,CAACd,SAA/B;AAA0C,MAAA,SAAS,EAAC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyD,KAAKU,KAAL,CAAWS,oBAApE,CAZF,CADF,EAgBE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEL,OAAO,CAACpB,WAAhC;AAA6C,MAAA,SAAS,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,WADL;AAEE,MAAA,eAAe,EAAE;AACfsB,QAAAA,MAAM,EAAE;AADO,OAFnB;AAKE,MAAA,MAAM,EAAC,QALT;AAME,MAAA,SAAS,EAAEF,OAAO,CAAC9B,SANrB;AAOE,MAAA,KAAK,EAAE,KAAK0B,KAAL,CAAWU,cAPpB;AAQE,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWW,0BARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEP,OAAO,CAACd,SAA/B;AAA0C,MAAA,SAAS,EAAC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyD,KAAKU,KAAL,CAAWY,mBAApE,CAZF,CAhBF,EA+BE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAER,OAAO,CAACpB,WAAhC;AAA6C,MAAA,SAAS,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,eAAe,EAAE;AACfsB,QAAAA,MAAM,EAAE;AADO,OAHnB;AAME,MAAA,SAAS,EAAEF,OAAO,CAAC9B,SANrB;AAOE,MAAA,KAAK,EAAE,KAAK4B,KAAL,CAAWJ,KAPpB;AAQE,MAAA,QAAQ,EAAE,KAAKL,sBARjB;AASE,MAAA,WAAW,EAAE;AAAEI,QAAAA,IAAI,EAAE;AAAR,OATf;AAUE,MAAA,MAAM,EAAC,QAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWKQ,OAAO,CAACQ,GAAR,CAAYC,MAAM,IAAI;AACrB,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,MAAM,CAACC,GAAtB;AAA2B,QAAA,KAAK,EAAED,MAAM,CAACE,UAAzC;AAAqD,QAAA,GAAG,EAAEF,MAAM,CAACC,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuED,MAAM,CAACE,UAA9E,CAAP;AACD,KAFA,CAXL,CAFF,EAiBI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEZ,OAAO,CAACd,SAA/B;AAA0C,MAAA,SAAS,EAAC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyD,KAAKU,KAAL,CAAWiB,iBAApE,CAjBJ,CA/BF,EAmDE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEb,OAAO,CAACpB,WAAhC;AAA6C,MAAA,SAAS,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,eAAe,EAAE;AACbsB,QAAAA,MAAM,EAAE;AADK,OAFnB;AAKE,MAAA,SAAS,EAAEF,OAAO,CAAC9B,SALrB;AAME,MAAA,KAAK,EAAE,KAAK0B,KAAL,CAAWkB,WANpB;AAOE,MAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWmB,uBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEf,OAAO,CAACd,SAA/B;AAA0C,MAAA,SAAS,EAAC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyD,KAAKU,KAAL,CAAWoB,gBAApE,CAXF,CAnDF,EAiEE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAEhB,OAAO,CAAClB,MAFrB;AAGE,MAAA,OAAO,EAAE,KAAKc,KAAL,CAAWqB,sBAHtB;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,OAAO,EAAC,QALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjEF,EAyEE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEjB,OAAO,CAACb,WAA/B;AAA4C,MAAA,SAAS,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2D,KAAKS,KAAL,CAAWsB,wBAAtE,CAzEF,CAJF,CADF,CADF,CADF;AAsFD;;AApGgC;;AAuGnC,eAAenD,UAAU,CAACE,MAAD,CAAV,CAAmBmB,UAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport { InputLabel } from 'material-ui/Input';\n\nconst styles = {\n  textField: {\n    marginTop: 50,\n  },\n  typography: {\n    htmlFontSize: 40,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30,\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white',\n  },\n  formError: {\n    color: 'red',\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10,\n  }\n};\n\nclass DoctorForm extends Component {\n  handleClinicMenuOption = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    event.preventDefault();\n    this.props.handleDoctorClinicChange(event);\n  }\n\n  state = {\n    value: '',\n  }\n\n  render() {\n    const { classes, clinics } = this.props;\n    \n    return (\n      <div>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography gutterBottom variant=\"headline\" component=\"h2\">\n              Add a doctor\n            </Typography>\n            <form noValidate autoComplete=\"off\" id=\"doctor-form\">\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"first-name\">First name</InputLabel>\n                <TextField\n                  id=\"first-name\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.props.doctorFirstName}\n                  onChange={this.props.handleDoctorFirstNameChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.doctorFirstNameError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"last-name\">Last name</InputLabel>\n                <TextField\n                  id=\"last-name\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.props.doctorLastName}\n                  onChange={this.props.handleDoctorLastNameChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.doctorLastNameError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"clinic\">Select a clinic</InputLabel>\n                <TextField \n                  id='clinic'\n                  select\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  className={classes.textField} \n                  value={this.state.value}\n                  onChange={this.handleClinicMenuOption} \n                  SelectProps={{ name: 'value'}} \n                  margin=\"normal\">\n                    {clinics.map(clinic => {\n                      return <MenuItem key={clinic._id} value={clinic.clinicname} sid={clinic._id}>{clinic.clinicname}</MenuItem>;\n                    })}\n                  </TextField>\n                  <Typography className={classes.formError} component=\"p\">{this.props.doctorClinicError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"doctor-phone\">Phone number</InputLabel>\n                <TextField\n                  id=\"doctor-phone\"\n                  InputLabelProps={{\n                      shrink: true,\n                  }}\n                  className={classes.textField}\n                  value={this.props.doctorPhone}\n                  onChange={this.props.handleDoctorPhoneChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.doctorPhoneError}</Typography>\n              </FormControl>\n\n              <Button \n                size=\"large\" \n                className={classes.button} \n                onClick={this.props.handleDoctorFormSubmit}\n                color=\"primary\" \n                variant=\"raised\">\n                Add doctor\n              </Button>\n              <Typography className={classes.formSuccess} component=\"p\">{this.props.doctorFormSuccessMessage}</Typography>\n            </form>\n          </CardContent>\n        </Card>\n      </div >\n    );\n  }\n}\n\nexport default withStyles(styles)(DoctorForm);\n\n"]},"metadata":{},"sourceType":"module"}